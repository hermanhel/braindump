PROPERTIES:
:ID:       4FBDA423-3258-4C4E-BBA1-408DCA2D036B
:END:
#+title: 2022-05-02*
#+HUGO_SECTION:daily
#+filetags: :draft:
#+filetags: :draft:
* rewrite hermhel/org-find-headline-in-buffer-olp
in cond fashion.
the conditions are:
+ not finding:
  + if the buffer contains no heading
    then add 1 matching the first heading in path
    search again
  + if not on a heading
    only when going in the buffer for the first time
    goto the next heading
  + if the buffer have heading, but the top level have no headings of cur-finding
    add 1 heading at end, with cur-finding,
    search again
  + if the level (not top level) have no heading of cur-finding
    insert a heading at end of level with cur-ding
    search again
    
+ finding:
  + finding a match, but no subheading(this is the match)
    create a heading and search a again
  + finding a match with subheadings(this is the match)
    go to next heading(the child level)
#+begin_src emacs-lisp
    (defun hermanhel/org-find-headline-in-buffer-olp (path)
      (interactive)
      (goto-char (point-min))
    
      (while (and (not (equal (length path) 0)))
        (let ((cur-finding (car path)))
          (cond
       ;; if buffer have no heading
       ((not (org-ml-this-buffer-has-headlines))
        ;;insert cur-finding heading at end of buffer
        (goto-char (point-max))
        (org-insert-heading)
        (insert cur-finding));;and search again(another round of while loop)
       ;; if buffer have headings, and
       ;; now not on a heading(at the beginning of program)
       ((not(org-on-heading-p))
        ;;goto next heading
        (org-next-visible-heading 1))
       ;; if the buffer have heading and now on a heading
       ;; and at top level and this level have no headings same as cur-finding(last node and is not)
       ((and (equal (nth 1 (org-heading-components)) 1)
             (equal (save-excursion
                      (outline-end-of-subtree)
                      (point))
                    (point-max))
             (not (equal (nth 4 (org-heading-components)) cur-finding)))
        ;; insert a heading at end
        (org-insert-heading-respect-content)
        (insert cur-finding))
       ;;  buffer have heading, now on a heading,
       ;; and not on top, last node, and is not
       ((and (> (nth 1 (org-heading-components)) 1)
             (equal (save-excursion
                      (outline-end-of-subtree)
                      (point))
                    (save-excursion
                      (outline-up-heading 1)
                      (outline-end-of-subtree)
                      (point)))
             (not (equal (nth 4 (org-heading-components)) cur-finding)))
        ;;insert at same level at end
        (org-insert-heading-respect-content)
        (insert cur-finding)
    
        )
       ;;buffer have heading, now on a heading,
       ;;find a match, cur-finding is the last in path
       ((and (equal (nth 4 (org-heading-components)) cur-finding)
             (equal (length path) 1)
             
        )
        (setq path (cdr path)))
    
       ;; buffer have heading, now on a heading,
       ;; and find a match, and have no subheadings
        ((and (equal (nth 4 (org-heading-components)) cur-finding)
              (not (outline-has-subheading-p)))
        ;; insert a subheading with next heading in path
         (end-of-line)
         (org-insert-heading)
        (org-do-demote)
        (insert (nth 1 path))
        ;; go back a level, to maintain the consistency of end state in this cond.
        (setq path (cdr path)
        ))
       ;; buffer have heading, now on a heading,
       ;; and find a match, and have subheadings
       ((and (equal (nth 4 (org-heading-components)) cur-finding)
             (outline-has-subheading-p))
        ;;goto next level, shrink path to search next heading
        (org-next-visible-heading 1)
        (setq path (cdr path))
        )
       ;; buffer have heading, now on a heading, in the middle, not finding it,
       ;; not any above
       (t
        (org-forward-heading-same-level 1))
       ))))
    ;;test
    (hermanhel/org-find-headline-in-buffer-olp '("herman" "is" "so" "handsome"))
#+end_src
* herman
** is
*** so
**** handsome

