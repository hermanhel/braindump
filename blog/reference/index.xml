<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>References on Herman's Place</title><link>https://hermanhel.github.io/braindump/reference/</link><description>Recent content in References on Herman's Place</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hermanhel.github.io/braindump/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Jethro Kuan's way of braindump building</title><link>https://hermanhel.github.io/braindump/reference/jethro-kuans-way-of-braindump-building/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/reference/jethro-kuans-way-of-braindump-building/</guid><description>Basic idea use ox-hugo to translate .org files into .md files. Resolving the org-id links along the way.
Flow ./build.py wrote ./build.ninja for translating every org file ./build.ninja use ./publish.el to do the translation. ./build.py take org file list using glob.glob write ninja rule and build script into build.ninja call ninja in the folder #!/usr/bin/env python import glob from pathlib import Path files = glob.glob(&amp;#34;org/*.org&amp;#34;) with open(&amp;#39;build.</description></item><item><title>Jethro Kuan's way of note-taking</title><link>https://hermanhel.github.io/braindump/reference/jethro-kuans-way-of-note-taking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/reference/jethro-kuans-way-of-note-taking/</guid><description>Machine slipbox setup . ├── articles ├── main ├── reference ├── inbox.org └── biblio.bib tools (setq org-roam-capture-templates &amp;#39;((&amp;#34;m&amp;#34; &amp;#34;main&amp;#34; plain &amp;#34;%?&amp;#34; :if-new (file+head &amp;#34;main/${slug}.org&amp;#34; &amp;#34;#+title: ${title}\n&amp;#34;) :immediate-finish t :unnarrowed t) (&amp;#34;r&amp;#34; &amp;#34;reference&amp;#34; plain &amp;#34;%?&amp;#34; :if-new (file+head &amp;#34;reference/${title}.org&amp;#34; &amp;#34;#+title: ${title}\n&amp;#34;) :immediate-finish t :unnarrowed t) (&amp;#34;a&amp;#34; &amp;#34;article&amp;#34; plain &amp;#34;%?&amp;#34; :if-new (file+head &amp;#34;articles/${title}.org&amp;#34; &amp;#34;#+title: ${title}\n#+filetags: :article:\n&amp;#34;) :immediate-finish t :unnarrowed t))) (cl-defmethod org-roam-node-type ((node org-roam-node)) &amp;#34;Return the TYPE of NODE.&amp;#34; (condition-case nil (file-name-nondirectory (directory-file-name (file-name-directory (file-relative-name (org-roam-node-file node) org-roam-directory)))) (error &amp;#34;&amp;#34;))) (setq org-roam-node-display-template (concat &amp;#34;${type:15} ${title:*} &amp;#34; (propertize &amp;#34;${tags:10}&amp;#34; &amp;#39;face &amp;#39;org-tag))) (push ;; other capture templates &amp;#39;(&amp;#34;s&amp;#34; &amp;#34;Slipbox&amp;#34; entry (file &amp;#34;~/Notes/RoamNotes/inbox.</description></item><item><title>Purpura, Bokil :: Neural Signal Processing: Tutorial</title><link>https://hermanhel.github.io/braindump/reference/purpuraneuralsignalprocessing2008/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/reference/purpuraneuralsignalprocessing2008/</guid><description>:ROAM_REFS:[cite:@purpuraNeuralSignalProcessing2008]</description></item></channel></rss>