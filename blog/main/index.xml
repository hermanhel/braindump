<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mains on Herman's Place</title><link>https://hermanhel.github.io/braindump/main/</link><description>Recent content in Mains on Herman's Place</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hermanhel.github.io/braindump/main/index.xml" rel="self" type="application/rss+xml"/><item><title>2+2 2022</title><link>https://hermanhel.github.io/braindump/main/20220118221715-2_2_2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220118221715-2_2_2022/</guid><description>DONETimeline Degree route BSc Information and Computing Science (XJTLU) to BSc Computer Science (Students can choose BSc Computer Science, or BSc Computer Science with a specialization in Artificial Intelligence, Data Sciences, or Algorithms &amp;amp; Optimisation)
Accommodation THREAD Accomodation Info agenda</description></item><item><title>5 step method</title><link>https://hermanhel.github.io/braindump/main/20211102235148-5_step_method/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211102235148-5_step_method/</guid><description>Description Formally addressed by Ray Dalio. A progressive evolution machine to make anything better.
Flow 1. Set Goal Outcome Goal list (ordered) all in headings Goals Desires Assosaries Moderation Procedure Have a list of goals Use headings so wikilinks like1. Set Goals would be available
Check/Filter Sort out Desires and Assosaries
Order the goals/desires What is wanted the most?</description></item><item><title>52 Book Challenge Project</title><link>https://hermanhel.github.io/braindump/main/20211222170720-52_book_challenge_project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211222170720-52_book_challenge_project/</guid><description>ACTIVE 52 Book Challenge Project agendadaily The Challenge is Read a book a week.
The project Machine Pretty simple, just read one a week.
Take note, Mind maps, practice, essays where it seemed to be interesting, and a review of the book to prove I actually read it.
Record would be kept under Record
NEXT Read Read the next chunk of the current reading book, or if I have a plan, next chunk of the plan</description></item><item><title>Academic Machine</title><link>https://hermanhel.github.io/braindump/main/20211011005922-academic_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011005922-academic_machine/</guid><description>This machine do academic activities.(get good grade in university; come up with good academic product) The machine consist of 3 sub machines particularly for academic sucess:
Tutor Machine Self-Learning Machine Homework Machine Status Current Project XJTLU-Y2S1
Upcoming Project XJTLU XJTLU-Y2S2 Liverpool University (optional) 研究生？ Doctor in Neuralscience Submachines Self-Learning Machine Should be ahead of time. Session regularly scheduled 2 days before a formal tutoring session. others as my wave goes.</description></item><item><title>Along</title><link>https://hermanhel.github.io/braindump/main/20220117090445-along/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220117090445-along/</guid><description>Along is a musical I decided to write. The draft of the songs are in the onenote now.
Charactors The Quiet Dying fixing to die. He knows no blues. But like blues a lot. The first song is
Songs 1. The noise of the quiet dying a blues</description></item><item><title>Archery Machine</title><link>https://hermanhel.github.io/braindump/main/20211008154820-archery_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211008154820-archery_machine/</guid><description>Principles Field Weather Rain Cloud uncheckedWhen it start to rain, look at the clouds:
Look heavy and dark It&amp;rsquo;s going to rain heavily after a while ==&amp;gt; Run Fast Not little, but thin The rain would be minor and stop soon ==&amp;gt; Stay and Watch</description></item><item><title>Artificial Intelligence</title><link>https://hermanhel.github.io/braindump/main/20220423143740-artificial_intelligence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220423143740-artificial_intelligence/</guid><description>Guide page to various AI-related topics
Categories Herman&amp;rsquo;s categories Expert System wikipedia use knowledge and processes an expert would have. Pretty much every algorithm.
Learning use standards to evolve by the system itself.
supervised learning
with correct answer(label)
unsupervised learning
without correct answer
Ray Dalio&amp;rsquo;s categories Expert System algorithms/machines formulated from 5 step process coded into computer.
Pattern finding find pattern in the facts by itself</description></item><item><title>Artist</title><link>https://hermanhel.github.io/braindump/main/20211008134350-artist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211008134350-artist/</guid><description>I have the gut to say, that I am a artist right here, right now. Long way to go, but I am doing art and creation.
Projects ACTIVE Musical Actor I am doing The Greatest Show.
Musical Club ACTIVE The Greatest Show
DONEStage Motion
follow Greatest Sqqqhow Stage Motion
Before &amp;amp; Graph 1 My opening See See Showing Huang &amp;amp; Graph 2 Grpah 3 and cycle Go to the Piano and Play DONEWEEK Gotta prepare the piano session Finish Piano and back wave and Sing Catch phrase get in line again Back to Piano and Gliss the final note.</description></item><item><title>Assembly Programming</title><link>https://hermanhel.github.io/braindump/main/20211018153044-assembly_programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211018153044-assembly_programming/</guid><description>I started assembly programming after a major crash of inline assembly in C++.
Specifications OS X assembly in macOS-stackoverflow OS X require that stack pointer have 16-byte alignment at the point of any external function call
.cstring _hello: .asciz &amp;#34;Hello, world\n&amp;#34; .text .globl _main _main:cmdline sub $8, %rsp // align rsp to 16B boundary mov $0, %rax lea _hello(%rip), %rdi // load address of format string call _printf // call printf add $8, %rsp // restore rsp ret Syntax Masm Structure</description></item><item><title>Athlete</title><link>https://hermanhel.github.io/braindump/main/20211008134506-athlete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211008134506-athlete/</guid><description>Being a Athlete Means to bear sportsmanship in mind and have willpower
Background Sound Sportsmanship It&amp;rsquo;s a attitude to games and sports.
Respect Respect the sport, the game, and the competitors. Knowing that the competitors are just like me, and have put no less effort and willpower into the sport than I do. Knowing that the game is as much of a finite game it is, and the game and the sport both converge to the one infinite game.</description></item><item><title>background awareness</title><link>https://hermanhel.github.io/braindump/main/20211114201617-background_awareness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211114201617-background_awareness/</guid><description/></item><item><title>blues</title><link>https://hermanhel.github.io/braindump/main/20220117091242-blues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220117091242-blues/</guid><description>Analysis Rhythem Melody Drum Harmony Groove Rhythm is about the presence and absence of 8th notes, and groove is about how these notes are played
Notes Melody Keep back to 1 note problem Scale Harmony Form</description></item><item><title>Bondage</title><link>https://hermanhel.github.io/braindump/main/20220327124320-bondage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220327124320-bondage/</guid><description>I learn Bondage most from theDuchy.com
theDuchy.com taking rope 101
Safty The 4 fundamentals Overhand commonly, make a loop around 2 fingers, and then spread them, too pull through another end.
Done 1 hand
twist around the rope to make loop
Done 2 hand
use 1 hand to make loop on another hand
As mark of the bight
make it around the bight.</description></item><item><title>Brain Dump</title><link>https://hermanhel.github.io/braindump/main/20220318182157-brain_dump/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220318182157-brain_dump/</guid><description>This is my brain dump. It is used in a term of very present. The life of all stuffs stock in here won&amp;rsquo;t be centry long, but like a week old. There are people use brain dump as dumping everything out and store them for document for search. That&amp;rsquo;s valid. However, this brain dump is to dump the most important thing at hand, against forgetting. So this page would be constantly exit between days, and I shall delete a entry once it don&amp;rsquo;t excite me, to make the whole thing pleasant.</description></item><item><title>bug machine</title><link>https://hermanhel.github.io/braindump/main/20220413224637-bug_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220413224637-bug_machine/</guid><description>flow 1. collect bug list collect all the errors reported
2. find solution to each search engine, stackoverflow/stackexchange
3. log solution/not solved log the solution or progress/trys if didn&amp;rsquo;t work it out in a easy-to-find place. maybe the program&amp;rsquo;s org-roam page, maybe the daily page.
4. publish issue? or on my website.</description></item><item><title>c language</title><link>https://hermanhel.github.io/braindump/main/20220322152728-c_language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220322152728-c_language/</guid><description>Structures #include &amp;lt;stdio.h&amp;gt; struct student{ char familyName[30]; char firstName[20]; int age; double aveGrade; }; int main(){ struct student stu1 = {&amp;#34;He&amp;#34;, &amp;#34;Linfeng&amp;#34;, 24,4.9}; stu1.age = 21; printf(&amp;#34;Name: %s %s\n&amp;#34;,stu1.familyName,stu1.firstName); } void printStudetn(struct student stu){ printf(&amp;#34;Name:%s %s\n&amp;#34;,stu1.familyName,stu1.firstName); } Pointer pointer and array int * p, i; int val[5]; p = val; equals p = &amp;amp;val[0]; *(p+1); refers to val[1] printf(&amp;#34;val is %d&amp;#34;,*p); would print the value p points to /* d df*/ with struct use -&amp;gt; to get fields.</description></item><item><title>C/C++</title><link>https://hermanhel.github.io/braindump/main/20220301151748-c_c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220301151748-c_c/</guid><description/></item><item><title>Cartesian Product</title><link>https://hermanhel.github.io/braindump/main/20211011172653-cartesian_product/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011172653-cartesian_product/</guid><description>A x B ==&amp;gt; for every A&amp;rsquo;s row, concat B&amp;rsquo;s rows.</description></item><item><title>CentOS</title><link>https://hermanhel.github.io/braindump/main/20220123224445-centos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220123224445-centos/</guid><description>Problem/sul. 32-bit libs. sometimes when ./xxx report no such file when there actually was. That could be caused by lack of 32-bit lib when under a 64-bit system.
Solution is download respectively the missing libs by yum install libstdc++.i686, where libstdc++ replaced by the lib. The .i686 stands for the 32-bit version of the lib.
back running use screen command. screen to start a screen, C-a-d to leave, screen -r to recovera</description></item><item><title>clojure</title><link>https://hermanhel.github.io/braindump/main/20220105010107-clojure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220105010107-clojure/</guid><description>Meta plan on the language I hope that I would be able to: [0/5] Write a website implement Machine learning Algorithm Build software Know the difference (of clojure and other) and when to use what taught others this language Credible Resources list of books:
programming clojure the joy of clojure maybe too philosophy clojure programming maybe little complecx clojure cookbook living clojure simpler list of websites:
clojure for the brave and true Rich Hickey&amp;rsquo;s talks clojuredocs.</description></item><item><title>clojurescript</title><link>https://hermanhel.github.io/braindump/main/20220415174414-clojurescript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220415174414-clojurescript/</guid><description>clojure, but compile into ECMAScript
Hello cljs project hello-world # Our project folder ├─ src # The CLJS source code for our project │ └─ hello_world # Our hello_world namespace folder │ └─ core.cljs # Our main file ├─ cljs.jar # (Windows only) The standalone Jar you downloaded earlier └─ deps.edn # (macOS/Linux only) A file for listing our dependencies {:deps {org.clojure/clojurescript {:mvn/version &amp;quot;1.10.758&amp;quot;}}} run the project #in the project directory clj -M --main cljs.</description></item><item><title>coding machine</title><link>https://hermanhel.github.io/braindump/main/20220326155217-coding_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220326155217-coding_machine/</guid><description>The machine of How I codeFlow Problem-Solution Error! see if I could analyse it clear how it went wrong if not, copy and yank the error message into search engine.</description></item><item><title>Compiler</title><link>https://hermanhel.github.io/braindump/main/20211021094723-compiler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211021094723-compiler/</guid><description>The Stages Can access details in man clang
1. Preprocessing 2. Parsing and Semantic Analysis 3. Code Generation and Optimization 4. Assembler 5. Linking Kinds GCC(GNU Compiler Collection) Clang( the Clang C, C++, and Objective-C compiler) MSVC(Microsoft Visual C) Know Issue a _asm{} for inline assembly language use is valid only under MSVC</description></item><item><title>consumer-oriented thinking</title><link>https://hermanhel.github.io/braindump/main/20220420172431-consumer_oriented_thinking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220420172431-consumer_oriented_thinking/</guid><description>consumer-oriented thinking is propositions and perspectives centered around the activity of transaction. Often, the thinker would take the position of consumer or employee.
Transaction A classic definition of transaction is exchange of matter between entities, usually with reference to modern business, where money and product are exchanged between people.
Centering Transaction Input-output and output-input consumer-oriented thinking focuses on relation of input and output.
Traditionally, the input-output relation are often refered as consequence knowledge, base on which prediction could be made from previous experiance of similar input.</description></item><item><title>Copy Machine</title><link>https://hermanhel.github.io/braindump/main/20211022163703-copy_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211022163703-copy_machine/</guid><description>Copy machine is a method to approach a specific output. E.g: I want to draw exactly like X, I apply copy machine to X.
Copy machine is exclusive. It have massive cost of attenction and focus and time, and have a massive result.
in Writing Benjamin mentioned his method once:
Find a paragraph Read to get the main idea Rewrite the paragraph myself Compare and make modification return to step 3 In his case, he claimed that it helps him build style</description></item><item><title>CPT101</title><link>https://hermanhel.github.io/braindump/main/20211007013240-cpt101/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007013240-cpt101/</guid><description>CPT101 is into Computer System Architeture. The class consist of the knowledge of the computer system, and a bit of assembly language programming in the assembly language used in C, a AMD RISC. The class is slow and shallow. Recommanded Method is Self Study and Go to the Professor for Problems
CPT101 Module Handbook
ACTIVE CPT101 agenda resources Textbook Computer Systems Architecture: A Networking Approach. by Rob Williams I have a copy of it.</description></item><item><title>CPT102 Data Structures</title><link>https://hermanhel.github.io/braindump/main/20220220160309-cpt102/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220220160309-cpt102/</guid><description>Data structures
look up Docs stored in DEVONThink3 The MCS UTS PAS notation: Get to know the modules
MCS Goals Data structure&amp;rsquo;s internal representation data structure&amp;rsquo;s algorithms Use time/space comlexity to choose from ways of implementation appropriate data structures to ensure efficient imple&amp;hellip; of algorithm Assesment Method Type Duration % Assesment Task 1 CW(quiz) 10 Assesment Task 2 CW(quiz) 10 Final Exam Exam 2 hour 80 Materials DATA STRUCTURES AND PROBLEM SOLVING USING JAVA by M.</description></item><item><title>CPT103</title><link>https://hermanhel.github.io/braindump/main/20211007013434-cpt103/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007013434-cpt103/</guid><description>COMPLETED CPT103 agenda Class Information CPT103 is of Database. The class. I seemed to be missing a lot. Got to see that Again
Credits - 5 num Method rnage time % 1 LMo test 15 2 LMO test 15 3 Project 70 Professor Info Jianjun Chen Contact
email(prefer): jianjun.</description></item><item><title>CPT104 OS Concepts</title><link>https://hermanhel.github.io/braindump/main/20220220183600-cpt104/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220220183600-cpt104/</guid><description>look up MCS Goals State the overall structure and functionality of a modern operating system and the interactions between computer hardware and user-programs. Identify the operations of the major components of an operating system, including the device manager, file manager, memory manager, and process manager. Identify the functions of system programs, including parser s, compilers, and virtual machines. Construct programs which demonstrate in a simple form the operation of examples of systems programs Assesment Method Type Duration % Assesment Task 1 CW(quiz) 10 Assesment Task 2 CW(quiz) 10 Final Exam Exam 2 hour 80 syllabus Week Lecture Topic Pre-reading 1 Intro, Processes Ch 1,2,3 2 Threads Ch 4 3 Process Synchronization Ch 5 4 CPU Scheduling I Ch 6 5 CPU SCheduling II Ch 6,7 6 Deadlocks Ch 7 7 Ass I 8 Main Memory Ch 8 9 Virtual Memory Ch 9 10 Mass Storage Systems Ch 10 11 File system Ch 11,12 12 I/o System Ch 13 13 Protection and Security + Ass II Ch 14,15 14 Virtual Machines and Distributed System Ch 16,17 comparing syllabuses kent Overview of operating systems, functionalities and charateristics of OS.</description></item><item><title>CPT107</title><link>https://hermanhel.github.io/braindump/main/20211007013423-cpt107/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007013423-cpt107/</guid><description>COMPLETED CPT107 agenda Class about Discrete Mathematics
Class Information Credits num Method range time % 1 CW ALL Exam week 80 2 CW LO1-3 Week 6 10 3 CW LO4-6 Week 13 10 TODOAssessment 1 Using Texmacs to write the result. Questions DEADLINE: &amp;lt;2021-10-29 Fri 17:00&amp;gt; Proof Techniques
Formality of writing the proofs contradiction machine general proof machine Set theory</description></item><item><title>CPT111</title><link>https://hermanhel.github.io/braindump/main/20211007013349-cpt111/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007013349-cpt111/</guid><description>COMPLETED CPT111 agenda Tutoring Schedule DONELecture SB102 DONELab SD546 DONEStudy for CW2 [10/10] :Effort: 200
The CW2 is filling the code.
Week 1 Week 2 Week 3 Week 4 Week 5 Week 6 Week 7 Week 8 Week 9 Week 10 DONECW2 lab test DONEPrepare for CW2 lab test TODOTry the mock exam TODOFind neccesary skill Tasks DONEPreview #1 DONEPreview #2 TODOCatch up the content. for doing homework for CW2 this</description></item><item><title>Daily Facts</title><link>https://hermanhel.github.io/braindump/main/20220506183239-daily_facts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220506183239-daily_facts/</guid><description>Some daily beliefs and facts
Energy [Hypo] 6 Hour Maximum I can maintain up to 6 Hour of very concentrated work(i.e. effective work)
simple math 6 Hour = 2 * 3 Hour = 3 * 2 Hour. A Dedicated Session typically claims 2-3 hour, so it make 2-3 Things to be done to be the maximam of a day.
I could start 2-3 dedicated session to tweak on 2-3 different topic a day.</description></item><item><title>Daily Machine</title><link>https://hermanhel.github.io/braindump/main/20211010192833-daily_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211010192833-daily_machine/</guid><description>Daily Machine is the machine that loop on daily basis. It&amp;rsquo;s the machine of the process of the day. Imagin it like a main() method in C. The Daily Machine establishes the common structure of days, and provide API(or hubs) to call other machines. It serves more like a navigation. The whole Daily Machine is constructed with with 3 basic machine according to time of a day:
Morning Machine Stuff Machine Evening Machine Background Sound Lost of work Commit frequently For every little progress, commit and describe it.</description></item><item><title>Dedicated Session</title><link>https://hermanhel.github.io/braindump/main/20220507150102-dedicated_session/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220507150102-dedicated_session/</guid><description>Dedicated Session is a machine for energy maintainance.
A Dedicated Session Contains&amp;hellip; Dumping Doing Releasing The Dedicated-session package this local directory holds the package I developed. In my .emacs.d/Emacs.org I used it by copying the files to site-lisp/dedicated-session
The package contains a function to start a session, and proceed between sessions</description></item><item><title>Direct-then-Drill</title><link>https://hermanhel.github.io/braindump/main/20211011020733-direct_then_drill/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011020733-direct_then_drill/</guid><description>This is a learning method specially for procedure-centered skills. e.g Jazz piano, Drawing, Writing Code.etc
Flow 1.Direct Practice Directly use relevent machine to do the thing. Log is possible. At least keep record.
2.Diagnose This step is kind of dependent on the logs or records of the direct practicce. These would be the material of Dignosis of the speed-controlling element to drill on
3.Drill 4.Repeat</description></item><item><title>Discrete Mathematics</title><link>https://hermanhel.github.io/braindump/main/20211027151914-discrete_mathematics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211027151914-discrete_mathematics/</guid><description>Number Systems Natural Numbers Closed under addtition any 2 num in N add get 1 num in N
Key property Any natural number can be obtained from 0 by S(n) = n + 1 S(0) = 1, S(S(0) = 2; induction !!
Integers and negative
Even and odd 0 = undefined
Rational Numbers x/y where x and y belong to Integers
Real numbers all decimal numbers Distances to points on a number line</description></item><item><title>Don Quijote</title><link>https://hermanhel.github.io/braindump/main/20220326161726-don_quijote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220326161726-don_quijote/</guid><description>Read Don Quijote notes Don;t dangle on 1 sentance too much.
read Don quijote Cue - obvious Time and place I will read 1 page of Don Quijote with all words and usages figured out at 4 p.m. at my desk I have my yellow grammar book on my desk Craving - attractive Reprogramming the brain the benefit of improving my coding skill I&amp;rsquo;ll be better in spanish I could really understand what Cervantes have to say, these spirits.</description></item><item><title>Drawing Machine</title><link>https://hermanhel.github.io/braindump/main/20211022221443-drawing_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211022221443-drawing_machine/</guid><description>Flow 1. Line Art Lineart Machine
1. Rhythm Line The line abstracting the body into impression of lines
The Rate
head = 1 he body = 1.5 he butt = 1 he leg = 1.5 he + 1.5 he palm = 1 he + 1 he + 2/3 he(hand)
2. Shape impression of shape
Shapes
Head = Square + Triangel Body = Square Butt = Square + Triangle(wider than head) Leg: upper = straight 1 side, middle out other side downner = strat 1 side, up out other side Palm: same as leg 3.</description></item><item><title>Drive machine</title><link>https://hermanhel.github.io/braindump/main/20220227132903-drive_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220227132903-drive_machine/</guid><description>The Skillset Start/stop Start 踩离合 离合:不踩 -&amp;gt; 全速; 踩完 -&amp;gt; 没速 挂一档 松离合 坡道: 慢起,等打火,再继续起 Stop 踩离合 挂一档 踩刹车 挂空挡 拉手刹 make turn 等身体过线 向方向打死 等差不多过了 松一圈 等直 park 左右 身体过线 打死 距离差不多 修 侧方 THREAD Getting Licence agenda Schedule Recommendation Time As Frequent. Don&amp;rsquo;t have lot of time in summer.
Attend Practice Attend Test</description></item><item><title>DST</title><link>https://hermanhel.github.io/braindump/main/20220301131955-dst/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220301131955-dst/</guid><description>Mods id name use 2325441848 ActionQueue RB2 Farming 2730172668 唐刀 一个不错的武器 2302837868 snapping tills farming 378160973 global positioning 351325790 geometric placement 20220301131955-dst</description></item><item><title>EAP121</title><link>https://hermanhel.github.io/braindump/main/20211007013334-eap121/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007013334-eap121/</guid><description>COMPLETED EAP121 agenda Tutoring Schedule DONESeminar DONESeminar Tasks DONEPreview #1 n:LAST_REPEAT: [2021-10-16 Sat 12:17]DONEPreview #2 DONEBuild the EAP121 node Get the schedules other informations TODOHomework. DONECatch up with the content of EAP121 Node TODOSpeaking Test speaking test task sheet
DONEFormative group pre
Group pre task sheet Go to wechat group for further organisation
DONEattend test DONEFinish first draft DONEFix first language under linggle something</description></item><item><title>Emacs</title><link>https://hermanhel.github.io/braindump/main/20211012152715-emacs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211012152715-emacs/</guid><description>Window movement Defalt actions Window move function key description winner-mode C-c left/right undo/redo window modification winum-mode C-x w focus jump to numbered window buf-move C-c w arrow key buffer move to neibouring window Crashes org-babel-tangle org-babel-tangle-single-block can fail due to the fault of syntax in src blocks like: [+begin instead of #+begin]
Hooks add-hook hook function to add a hook remove-hook hook function to remove a hook</description></item><item><title>emacs-lisp</title><link>https://hermanhel.github.io/braindump/main/20220430172003-emacs_lisp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220430172003-emacs_lisp/</guid><description>declar/assign symbols function variable local let*: sequential let let: concurrent let tags table generated by the etags program, and is used by xref functions
open file with Org-mode create entry in org-mode insert heading.
navigate in org-mode file (require &amp;#39;org-ml) (defun testfunc () (interactive) (setq x (org-ml-parse-subtrees &amp;#39;all))) (global-set-key (kbd &amp;#34;C-c t&amp;#34;) &amp;#39;testfunc) (print x) get time (org-insert-time-stamp (org-current-time))&amp;lt;2022-04-30 Sat&amp;gt; (insert-before-markers (format-time-string &amp;#34;%Y&amp;#34; (org-current-time))) 2022 (insert &amp;#34;hyt&amp;#34;) (org-time-convert-to-integer (org-current-time)) using org-ml library getting things at point org-ml functions with this often deal with things at point</description></item><item><title>Engineer</title><link>https://hermanhel.github.io/braindump/main/20211102001428-engineer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211102001428-engineer/</guid><description>Computer Science Programming Programming languages As a engineer, I need to master some PL to be able to create some accountable work. Though the philosophy would be the same
C/C++ language Java Python Lisp
ACTIVE Clojure
how to do things
in the clojure page. use my-practice to hold the .clj files.
Use of Lein Graphics Javascript Algorithms PLAN Art of Computer programming</description></item><item><title>Entertainment Control Machine</title><link>https://hermanhel.github.io/braindump/main/20211222170013-entertainment_control_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211222170013-entertainment_control_machine/</guid><description>Big Things &amp;lt;2021-12-22 Wed&amp;gt; Serious Entertainment Move From now on, A week, to &amp;lt;2021-12-29 Wed&amp;gt;, no Traditional Entertainment. All replace to Math.
As Descrete Math is in the schedule, the math would be from ACP.
Pool of Entertainment Hobbies TV show House M.D. I love this show, both the case, story and House&amp;rsquo;s personality.</description></item><item><title>Feynman Techinique</title><link>https://hermanhel.github.io/braindump/main/20211011020236-feynman_techinique/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011020236-feynman_techinique/</guid><description>General Idea Understand/test understanding by teaching/explaining the content.
Implementation essay Write essay about the content, whether it&amp;rsquo;s a concept or problem, try to explain it as clear as possible. make it a masterpiece, but without all the troublesome editing.
Illustrate as from ultralearning
form Get a blank sheet of paper on top: the concept/problem to explain explain the idea as if teaching someone. concept: convey the concept to a people had never heard of it before problem: explain how to solve, and why the solution make sense if stuck, meaning the understanding fails to give clear model of what&amp;rsquo;s going on, and time to return to materials.</description></item><item><title>Finite Game</title><link>https://hermanhel.github.io/braindump/main/20211007012920-finite_game/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007012920-finite_game/</guid><description/></item><item><title>Focus machine</title><link>https://hermanhel.github.io/braindump/main/20211114232712-focus_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211114232712-focus_machine/</guid><description/></item><item><title>General task doing machine</title><link>https://hermanhel.github.io/braindump/main/20211108153719-general_task_doing_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211108153719-general_task_doing_machine/</guid><description>strategy/principle and flows for doing task in a session
Background Sound Magic image Imagin the thing I&amp;rsquo;m learning is a kind of magic. Being able to understand and use the thing would give me the ability to perform magic.
Imagine the power. The power I could get from the knowledge, the power scene.
Strategy/Principle Take Log Log or not Could skip log only with tasks too simple/used to that I could resite the whole process with ease</description></item><item><title>Genius worship</title><link>https://hermanhel.github.io/braindump/main/20211107233555-genius_worship/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211107233555-genius_worship/</guid><description>Worship to genius. Thinking that one with genius is all reason of its success. Thinking that Genius is supernatural, is almighty. Thinking that one is all and a moment is forever.
尼采有类似的言论。
James Carse&amp;rsquo;s thought of &amp;ldquo;Genius of myself&amp;rdquo; could be a way out.</description></item><item><title>Genral Purpose</title><link>https://hermanhel.github.io/braindump/main/20220507161603-genral_purpose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220507161603-genral_purpose/</guid><description>funciton like (sort col compare-fn).
The compare-fn can be customized, so the sort won&amp;rsquo;t just sort to asending order, but also other prupose like descending order, or other order based on (somefunc x) or specific entry in composite date.</description></item><item><title>Git</title><link>https://hermanhel.github.io/braindump/main/20211014221604-git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211014221604-git/</guid><description>Magit Magit is a git interface in Emacs.
Commands 1. Magit status C-x g ? show all commands TAB s stage change S stage change all
2. Branch b
3. stash Hosting github projects Setup new repository on github.com in local repository place, like ~/playground/projects, do git clone git@github..... first push: git remote add gh git@github...., then git push gh Modifying Pull request? merge</description></item><item><title>Graphviz</title><link>https://hermanhel.github.io/braindump/main/20220403171635-graphviz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220403171635-graphviz/</guid><description>Dot lang. graph graph1 { something; } indirected graph graph1{ a -- b -- c; b -- d; } directed digraph graph1{ a -&amp;gt; b -&amp;gt; c; b -&amp;gt; d; } attrs strict graph{ // node attr b [shape = box]; // edge attr a -- b [color=blue,style = dotted]; } subgraph digraph graphname{ a -&amp;gt; {b c}; c -&amp;gt; e; b -&amp;gt; d; subgraph cluster_bc { bgcolor=red; b; c; } subgraph cluster_de { label=&amp;quot;Block&amp;quot; d; e; } } Use in Shell dot -Tpdf filename.</description></item><item><title>Household Machine</title><link>https://hermanhel.github.io/braindump/main/20211011010036-household_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011010036-household_machine/</guid><description>The machine is particularly for household and chores
Construction Cloth Washing Once a day. Should be done by hand. Clothes, and Socks.
Archive Fold the clothes out of season and archive. Don&amp;rsquo;t forget anti-bug facility and dryer
Store Store in the closet and myside case Dryer!
Bed Make bed Should make bed after get up
Washing bed Should wash bed to a period. To be checked
Tidy Space Desktop Destop should be orgnized.</description></item><item><title>Information Updating Machine</title><link>https://hermanhel.github.io/braindump/main/20211121163111-information_updating_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211121163111-information_updating_machine/</guid><description>updating informations gethered from:
Website RSS Feeds Blog feeds Mailbox(mail.xjtlu) Wechat groups Ebridge Learning mall Texting Inbox Period Email Every day at 9:00. In days 9:00 is occupied, the next leisure.
Process Email 1. Deleting/Filtering Delete everything I thought is irrelevent to me
2. Important things Record everything that&amp;rsquo;s nessacery into my agenda.
3. Oppurtunity Fetch oppurtunity into the coresponding Role
Course/task (asigned) information Information Scheme Information host position</description></item><item><title>INT102</title><link>https://hermanhel.github.io/braindump/main/20220224134654-int102/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220224134654-int102/</guid><description>Algorithm
UTS Deliver Plan Lectrue https://xjtlu.zhumu.com/j/6208331180
DONELecture 1 DONELecture 2 DONELecture 3 DONELecture 4 DONELecture 5
Greedy Method
Best move in each step. make for the current best choice
pro
fast easy good con
good solution, but no the best How to design
example</description></item><item><title>INT104 AI</title><link>https://hermanhel.github.io/braindump/main/20220224134643-int104/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220224134643-int104/</guid><description>AI
UTS Deliver Plan https://xjtlu.zhumu.com/j/606851045
Lecture DONELecture 1 DONELecture 2 DONELecture 3 DONELecture 4 DONELecture 5
What is AI Label visualization
superised unsupervised semi-supervised
save labour of labeling High efficiency for data usage Math representation
s: feature vector, S = sts I = labels vector I = F(S) would be an ideal</description></item><item><title>Java</title><link>https://hermanhel.github.io/braindump/main/20211017163728-java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211017163728-java/</guid><description>Setup Language Common syntax Variable declare unary Datatypes
Numeric
Int num = 2; Double numd = 2.9; String
String str = &amp;#34;this is a stinrg&amp;#34;; Boolen
boolean bool = false; List
Array
int [] myArray; //declare myArray = new int[5]; // create a new array object; Assign it to myArray myArray[0] = 100; int[] myArray ={100,200,3,4,5}; int[] anArray = new int[5]; String[] s = new String[100]; //initialization Array method</description></item><item><title>Jazz Piano machine</title><link>https://hermanhel.github.io/braindump/main/20211115224457-jazz_piano_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211115224457-jazz_piano_machine/</guid><description>进行 II-V 中间夹大小三度交替下行 十三音可能会好用
下行进行 三度 问题 看不清</description></item><item><title>Jupyter</title><link>https://hermanhel.github.io/braindump/main/20211022101252-jupyter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211022101252-jupyter/</guid><description>Notebook Installation Tornado Detected 4.5.3 instead of &amp;gt;=5 solution
xlsx import pandas as pd path = (&amp;#39;&amp;#39;) xl = pd.ExcelFile(path) df1 = xl.parse(&amp;#39;&amp;#39;) # sheet name; into Dataframe ardf1 = df1.values # into array Visual Pie chart Bar chart</description></item><item><title>Latex</title><link>https://hermanhel.github.io/braindump/main/20220330153456-latex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220330153456-latex/</guid><description>\({\LaTeX}\) is a system to write science/math format consistent papers.
syntax for latex files for Org use C-c C-x C-l to toggle latex preview
inline Math latex block signal
\[ __ \] \(_\) \begin{math} &amp;hellip; \end{math} \[__\] \begin{equation} e = mc^2 \end{equation} The math notations notation meaning sin sin func(similar other triangle funcitons) \frac fraction (d for large, t for small) … &amp;hellip; ∫ integral α alpha ^{} superscript _{} subscript \binom</description></item><item><title>Linear Algebra</title><link>https://hermanhel.github.io/braindump/main/20220423190558-linear_algebra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220423190558-linear_algebra/</guid><description>Linear Algebra is set of algebra formulated rules, formulated methods and found facts
Resource This note is originally a reading note on math4ml. I&amp;rsquo;m adding my own insights afterwards. Spaces Vector space set of vectors defining:
add operation: v1 + v2 scale operation: n * v1 propositions 0: x + 0 = x -x: for each x, exist -x + x = 0 1: 1x = x commutativity: x+y=y+x Associativity: (x+y)+z=x+(y+z),(ab)x=a(bx) Distributivity: a(x + y) = ax + ay linear combination set of vectors: \(V=\{v_1,v_2&amp;hellip;\}\) set of real numbers: \(R = \{a_1,a_2&amp;hellip;\}\) linear combination: \(a_1v_1 + a_2v_2+&amp;hellip;+a_nv_n\) linear independent only combination of \(a_1v_1+a_2v_2+a_3v_3+&amp;hellip;=0\) is \(a_1 = a_2 = &amp;hellip; = 0\)</description></item><item><title>linear progression</title><link>https://hermanhel.github.io/braindump/main/20220215212534-linear_progression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220215212534-linear_progression/</guid><description>linear progression in a form of supervised learning
regularization Tichonov regularization trace a smooth line between points -&amp;gt; curve estimates the shape of he data</description></item><item><title>Lineart Machine</title><link>https://hermanhel.github.io/braindump/main/20211023144531-lineart_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211023144531-lineart_machine/</guid><description>Flow 1. Draw the rough more than once 1. 1st Rough Illustrate the mood, very simple, with necessary details Use Blue to disguise Ignore partial off Use pencil like tools
2. 2st Rough Clear lineart. Use dark red to let it stand out Check the original mood Use structure partials and tools (structure line) to clear the structural off</description></item><item><title>Log Machine</title><link>https://hermanhel.github.io/braindump/main/20211007132712-log_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007132712-log_machine/</guid><description>There are 2 kinds of log machine, dealing with 2 situations
Doing bunch of small tasks Doing a scheduled big tasks Journal.org Tasks.org Description Log machine takes in experiences, make them capable to reflect on. it will be further checked by Reflect Machine, to generate principles to follow on the next run.
Similarly described in
methods Journal.org C-c c org-capture j j Journal entry before the whole session start, open the Journal entry.</description></item><item><title>Lucid Dream</title><link>https://hermanhel.github.io/braindump/main/20211230151459-lucid_dream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211230151459-lucid_dream/</guid><description/></item><item><title>Lucid Dream</title><link>https://hermanhel.github.io/braindump/main/20211230151508-lucid_dream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211230151508-lucid_dream/</guid><description/></item><item><title>Lucid Dream</title><link>https://hermanhel.github.io/braindump/main/20211230151528-lucid_dream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211230151528-lucid_dream/</guid><description/></item><item><title>Lucid Dream</title><link>https://hermanhel.github.io/braindump/main/20211230151540-lucid_dream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211230151540-lucid_dream/</guid><description/></item><item><title>Lucid Dream</title><link>https://hermanhel.github.io/braindump/main/20211230151549-lucid_dream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211230151549-lucid_dream/</guid><description>Lucid Dream is a kind of dream that the dreamer is self-awareed and capable of making changes to the dream.
Techniques There are various techniques to trigger lucid dreaming.
太玄功 太玄功是宇宙之铁百度贴吧老哥发明的LD技术。
切换 太玄功的基础是切换。
切换指：在集中注意视觉、听觉、触觉中切换
一个基本的切换session包括：
集中注意视觉感觉到的东西 不要斗鸡眼，而是放松。 光是在进入状态后平常的。 集中注意感觉听到的东西 耳鸣、脉搏、空气声是平常的。 集中注意感觉身体所触碰到的 空气温度、被子触感、衣物触感是平常的 基础Procedure 准备 一个基本的准备是在睡下后定闹钟5个小时醒来。 醒来后进行一些活动，再回床上进行下一个步骤。 由于睡眠阶段种类关系，直接进行太玄功的效果是compromised。
热身 4-6组每个切换感觉6秒左右的session。
进入状态 2-3组每个切换感觉30秒左右的session。</description></item><item><title>Machine</title><link>https://hermanhel.github.io/braindump/main/20211104155334-machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211104155334-machine/</guid><description>Categories Purpose Project machines A machine could be constructed just for a particular project, with itself used for only once.
Such machine have components that should work with each other that will make the project success, like my credit in EAP121 or make a particular robot.
components could be preparation of a presentation or moving algorithm of the robot
Everyday machines machines could also be designed to deal with a type of repetitive occuring tasks, like loundary.</description></item><item><title>macOS</title><link>https://hermanhel.github.io/braindump/main/20211017154929-macos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211017154929-macos/</guid><description>Crash - Repair DYLD Problem brew install node # or brew upgrade node It could be that later installed softwares messed up the path. node could fix that.</description></item><item><title>Me_meta</title><link>https://hermanhel.github.io/braindump/main/20211114195701-me_meta/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211114195701-me_meta/</guid><description>Weakness My Greatest weakness Memory I can remember little thing at a time. It is said that human can maintain 3-7 chunks of information at a time, for me the figure is 1. I can still recall other things, but harder, and not spontaneously. It&amp;rsquo;s like register and memory in computer. I have well working memory and a very small amont of register.
Account
Disadvantage
Constant/continueous converging.</description></item><item><title>Media consumption project</title><link>https://hermanhel.github.io/braindump/main/20211116140319-media_consumption_project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211116140319-media_consumption_project/</guid><description>Literature Novels Light Serious Movie 007 series 盖里奇 困在时间里的父亲</description></item><item><title>Media control machine</title><link>https://hermanhel.github.io/braindump/main/20211116133253-media_control_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211116133253-media_control_machine/</guid><description>Target Target of media control includes:
Game Movie Video Music Novel Illustrat etc Restriction Focus of Consumption of media, with no further specifiction, is less important than my goals.
But Medias have strong strategy implication and urges for its lasting existence. Left it un-supervised will result in it dominating every piece of time in my life.
Therefore, restriction measure should be applied
Time limit A overall time limit to media consumption Current time limit is 60 minutes #+begin_src emacs-lisp (setq media-time-limit 60) #+end_src&amp;gt;</description></item><item><title>Metalearning</title><link>https://hermanhel.github.io/braindump/main/20211011023115-metalearning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011023115-metalearning/</guid><description>Research on the learning method of the topic and resources first</description></item><item><title>My Body</title><link>https://hermanhel.github.io/braindump/main/20211103170323-my_body/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211103170323-my_body/</guid><description>Sicknness Shoulder Sometimes sore, after sitting, and exercise. Position near neck. join up neck
Teeth 咬合</description></item><item><title>My braindump build</title><link>https://hermanhel.github.io/braindump/main/my_braindump_build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/my_braindump_build/</guid><description>Method I used the build.py and ninja approach and copyed publish.el most from Jethro&amp;rsquo;s Braindump. The build.py didn&amp;rsquo;t work for me, so I borrowed from system crafter&amp;rsquo;s org website tutorial the way to build: instead of a complete init.el, I used a minimal init.el to do the work.</description></item><item><title>my CV</title><link>https://hermanhel.github.io/braindump/main/20220411181058-my_cv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220411181058-my_cv/</guid><description>Education 2016.9-2020.6 The Highschool Attached to Zhejiang University 2020.9-Now Xi&amp;rsquo;an Jiao Tong Liverpool University, Information and Computing Science Experiance 2020-2021 Lecturer in XJTLU Peer Tutoring Club, Linear Algebra. 2020-2022 Actor in XJTLU Musical Club, Les Miseráble, Next to Normal, The Greatest Showman, Mozart L&amp;rsquo;Opera Rock, Heaven Listened. 2018-Now Blog Writer, mainly on social/philosophical issues. https://hermanhelf.lofter.com/, https://hermanhel.github.io/. 2020-2021 Attended APMCM and MCM. Both 3rd Prize. Skills Programming Languages Mediocre Clojrue.</description></item><item><title>My Novel</title><link>https://hermanhel.github.io/braindump/main/20211216142148-my_novel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211216142148-my_novel/</guid><description>Drafts Understanding</description></item><item><title>My Website</title><link>https://hermanhel.github.io/braindump/main/20211109121725-my_website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211109121725-my_website/</guid><description>Current host under hermanhel.github.io
Functionality host blog
Blog Write standalone org file under blog folder. Add link mannually to the main page.
Per-webpage html export of org use configuration check system crafters' video for more details.
Future Blog Add Golden statement? Brain dump knowledge database? Wiki Card-note? Dynamic Website include comment
Approach Rent a server Implement Backend Buy a name.</description></item><item><title>MySQL</title><link>https://hermanhel.github.io/braindump/main/20211014172309-mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211014172309-mysql/</guid><description>Using MySQL Server Emacs I Think that I&amp;rsquo;ll be using this approach mainly. Check that out.
Using eshell mysql -h [server] -u [usrname] -p # RET, then input the passward Using sql-MySQL Edit a .sql file M-x sql-MySQL usrname, password, database, server. Error: cannot find mysql exec
Find the exec. Usually a binary exec under &amp;quot;/some/where/bin&amp;quot;
TODOphpMyAdmin This is the official way taught in class, should be.</description></item><item><title>Navigation</title><link>https://hermanhel.github.io/braindump/main/20210928102253-navigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20210928102253-navigation/</guid><description>The navigation to:
Projects Roles Knowledge areas etc&amp;hellip;</description></item><item><title>Neuralscientist</title><link>https://hermanhel.github.io/braindump/main/20211012021721-neuralscientist/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211012021721-neuralscientist/</guid><description>I want to be a Neuralscientist, to explore the mechanism of consciousness. Hope that one day I could figure it out, and make something Really interesting.
Pathaway In Order to be a great neuralscientist, I have to get into a major research center of neuralscience. Therefore, I need academic success. Hopefully I could go directly for my PhD, but that would require very good grade. So, I set up the Academic Machine.</description></item><item><title>Note-taking</title><link>https://hermanhel.github.io/braindump/main/20220508095438-note_taking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220508095438-note_taking/</guid><description>Note-taking is a skill and art of writing notes to record one&amp;rsquo;s thinking
Different flow could be seperately declared by:
Material of reflex reality(nature) article someone&amp;rsquo;s work tutorial/textbook Time(context) in leisure in work(about work) in class objective machine (to build a flow) principle (to test) facts plan (project machine) Jethro&amp;rsquo;s Note taking I read Jethro&amp;rsquo;s How I take notes with Org-roam and was really inspired.</description></item><item><title>Operating System</title><link>https://hermanhel.github.io/braindump/main/20220328151029-operating_system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220328151029-operating_system/</guid><description>The Info comes most from MITOCW
MIT 6.S081 meta 6.s081. a website. qemu, a hardware simulation under linux xv6, a teaching OS, on RISC-V processor
Overview What Operating system do Abstract Hardware Multiplex Isolation Sharing Security access Preformance Range of application orgnization Image Kernel have filesystem, process management, memory management&amp;hellip;codes.
filesystem: give more high-level way to name files, orgnize directories,etc. process management: vi, cc are like different processes, and we want then to run concurrently, without interfering each other.</description></item><item><title>Org-mode</title><link>https://hermanhel.github.io/braindump/main/20210929115829-org_mode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20210929115829-org_mode/</guid><description>see org-card
Task management Agenda Agenda is a functionality of Org-mode focusing on Task Management. Agenda provides a view to see all the tasks in a Daily/Weekly BaseAdd to Agenda Add Tasks to agenda by:
Add TODO to the front of heading Schedule by C-c C-s- or Deadline by C-c C-d TODO States
Next
TODO in (TODO NEXT | DONE) Next means the next task to do.</description></item><item><title>Paper Reading Machine</title><link>https://hermanhel.github.io/braindump/main/20211129184304-paper_reading_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211129184304-paper_reading_machine/</guid><description>Process Answer the following questions in context of every paper:
What&amp;rsquo;s the problem What&amp;rsquo;s the finding What&amp;rsquo;s the interpretation What&amp;rsquo;s the design/logic of the experiment/research What exactly was done How were the data analysed 1. Early stage questions Answer could be found in the abstract.
If not, they should be appearing in the introduction or conclusion
What&amp;rsquo;s the problem What&amp;rsquo;s the finding What&amp;rsquo;s the interpretation 2. Further questions Answer might not be easily found.</description></item><item><title>PHP</title><link>https://hermanhel.github.io/braindump/main/20211021095308-php/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211021095308-php/</guid><description>I don&amp;rsquo;t know much. Have something todo with C
Configuration php.ini uner /etc on my Mac find on other machine using phpinfo() in php console.
Library intl I&amp;rsquo;m finding this library because it&amp;rsquo;s a dependency of Meson, a build system in C. I need it to build pacman. It&amp;rsquo;s functionality is to &amp;ldquo;internationalize&amp;rdquo; the program.
I still don&amp;rsquo;t know how to install it.
Log a way I tried is:
update php brew install icu4c sudo pecl install intl But I failed, it&amp;rsquo;s reporting missing icu packages</description></item><item><title>Plan</title><link>https://hermanhel.github.io/braindump/main/20220507161909-plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220507161909-plan/</guid><description>A</description></item><item><title>Presentation</title><link>https://hermanhel.github.io/braindump/main/20211201164301-presentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211201164301-presentation/</guid><description>Resource TODOTed Talks https://www.ted.com/talks/chris_anderson_ted_s_secret_to_great_public_speaking/details#t-94408 https://www.learningmall.cn/mod/mediasite/view.php?inpopup=true&amp;amp;id=166574 TODOEAP121 Workbook TODOEAP121 Slides Idea Idea is the fundamental part of speech and presentation
Guideline 1. Focus on 1 major idea 2. Curiosity 3. Use language of the audience 4. Worth sharing Common mistakes Reading slides text too small Bad color choices moving object overly complex diagram irrelevent image Outline Use 1st/2nd slide as an outline of the presentation
use main points/headings
Criteria Good slide structure 1-2 slides per minute in point form, rather than complete sentences 4-5 points per slide avoid wordiness: use key word/phrase only Show 1 point at a time Fonts &amp;gt;= 18 points Use different size of fonts(heading:36,main point:28,minor point:24) Use standard font like Times New Roman/Arial Don&amp;rsquo;t use complicated font Color stand out of the background to mark up to emphasize(occasionally) Background Use light background Use simple background Use the same background Conclusion Use an effective and strong closing Use concluion slide to Summarize the main points Suggest future avenues of research</description></item><item><title>principle</title><link>https://hermanhel.github.io/braindump/main/20211005121901-principle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211005121901-principle/</guid><description>Principles are guidelines drew from recognition of if...then... or cause and effect relationship. Upon such recognition, the way leads to ideal condition becomes Principles and should be recorded
Formation from errors and experiances comes facts. Facts contains decision and result from personal belief and reality comes goals, of choice or of performance. goals contains specific goal and requirement an act with principle make decisions on what strategy/thing to do base on reality, look to goals.</description></item><item><title>Process Control Machine</title><link>https://hermanhel.github.io/braindump/main/20211108154329-process_control_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211108154329-process_control_machine/</guid><description>A machine for process control of task. converge to Ray Dalieo&amp;rsquo;s principle of Doing: &amp;ldquo;always have process control to make sure the solution are executed strictly&amp;rdquo;
Use [1/4] [1/4]</description></item><item><title>Programming Languages</title><link>https://hermanhel.github.io/braindump/main/20220301151624-programming_languages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220301151624-programming_languages/</guid><description>This is the index of programming languages I have note for.
C/C++ Python clojure Java</description></item><item><title>Programming Machine</title><link>https://hermanhel.github.io/braindump/main/20211119124047-programming_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211119124047-programming_machine/</guid><description>Principles/Strategies Function Return time In what circumstance to return?
Example
searching for all occurance of &amp;ldquo;country&amp;rdquo; in &amp;ldquo;xdffsdg country dfef country wdfd&amp;rdquo; #+begin_src java while(index &amp;lt; input.length()){ if(){ find input.indexOf(&amp;ldquo;country&amp;rdquo;,index) } else if (){
} } #+end_src&amp;gt; note that, indexOf() returns -1 if not find, and all circumtance must end with that condition. Therefore, an else if (index &amp;lt; -1){return input} clause is neccesary.
Functional Programming Paradigm</description></item><item><title>Project Euler</title><link>https://hermanhel.github.io/braindump/main/20220214004949-project_euler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220214004949-project_euler/</guid><description>My emergency account recovery key Recovery Key: 1922849-awZMlDGEXAkJxP9KYJS64mbtZbps9PHJ89F6h5lI Direct Link: https://projecteuler.net/recovery=1922849-awZMlDGEXAkJxP9KYJS64mbtZbps9PHJ89F6h5lI Generated: Sun, 13 Feb 2022, 16:49.06</description></item><item><title>Project plan machine</title><link>https://hermanhel.github.io/braindump/main/20211115173433-project_plan_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211115173433-project_plan_machine/</guid><description/></item><item><title>Projects</title><link>https://hermanhel.github.io/braindump/main/20210929010628-projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20210929010628-projects/</guid><description>Nav for projects. Project Inbox.
Game Projects WAIT Terraria agenda 使用Terraria Goingthrough中的升级路径。
The Greatest Show</description></item><item><title>Python</title><link>https://hermanhel.github.io/braindump/main/20211022142302-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211022142302-python/</guid><description>control flow Branching if predicate: statement(s) elif predicate: statement(s) else: statemnt(s) Loop while predicate: statement(s) else: statements(s) for item in seq: statements(S) Numpy Array concat import numpy as np np.append(ARRAY,X) # X could be a array or a number np.concatenate(ARRAY_A,ARRAY_B,ARRAY_C.....,axis=AXIS) numpy statistic import numpy as np data1 = np.random.randn(20) max = np.max(data1) min = np.min(data1) mean = np.mean(data1) variance = np.var(data1) standard_deviation = np.std(data1) median = np.median(data1) max,min, &amp;#34;Mean:{0:8.4f}&amp;#34;.format(mean),variance,standard_deviation,median # Out[1]: #+BEGIN_EXAMPLE (1.</description></item><item><title>Question answer machine</title><link>https://hermanhel.github.io/braindump/main/20211116161513-question_answer_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211116161513-question_answer_machine/</guid><description>Procedure 1. Pause Filler Example THat&amp;rsquo;s a difficult question&amp;hellip; Let me see Let me think about that for a moment That&amp;rsquo;s an interesting question 2. Repeat/Paraphrase Question(to give you even more thinking time) Example Hmm&amp;hellip; Do I agree or disagree introducing more physical education lessons in the school curriculum is the best way to deal with obesity?
3. Use a topic sentence Example I think it is the best way for a number of reasons</description></item><item><title>R language</title><link>https://hermanhel.github.io/braindump/main/20220328161104-r_language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220328161104-r_language/</guid><description>Arithmetics infix 1 1 + 2 (1 + 2) z &amp;lt; -1 z = 2 2 == 2 %% for mod ^ for power Control flow decision if-else if(condition){ statements() } else if (condition){ statements() } else { statements() } loop While while(condition){ statements() } for for (count in 1:7){ cat(&amp;#34;hi, &amp;#34;, name, &amp;#34;it&amp;#39;s 7:00&amp;#34;) } Funciton define Square = function(x){ return(x*x) } useful ones ls() it shows all binded vars in the namespace.</description></item><item><title>Reflect Machine</title><link>https://hermanhel.github.io/braindump/main/20211102235051-reflect_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211102235051-reflect_machine/</guid><description/></item><item><title>Regexp</title><link>https://hermanhel.github.io/braindump/main/20211012165821-regexp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211012165821-regexp/</guid><description>Ref Tools Methods substract informations Using the</description></item><item><title>Relational Database</title><link>https://hermanhel.github.io/braindump/main/20211011143205-relational_database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011143205-relational_database/</guid><description>ca:PROPERTIES: :ID: 916112C1-589D-4FC2-B430-93EB989A1350
Relational Model Relation table with columns and rows records(Tuples) with common attributes
Attribute named column
attribute 1 attrbute 2 Domain allowable values for Attribute e.g: Age ==&amp;gt; Positive Integer
Tuple a row of a relation
Degree the number of attributes of a Relation
Cardinality number of Tuples in a Relation
Relation schema Definition of a relation Contains:</description></item><item><title>Review Machine</title><link>https://hermanhel.github.io/braindump/main/20211011014207-review_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011014207-review_machine/</guid><description>This machine is for review of everything worth look back on in a 1d, 7d, 14d, 30d cycle.
Flow 1. Record Record the content worth reviewing by hitting C-c c (org-capture) and r(review). Record the summary and resource/notes for review. Records would be kept in OrgNotes/Review.org
2. Review Go to OrgNotes/Review.org, and run command org-review1. A sparse tree showing the items would be automatically generated. The log of the reviewing should be done seperately in every entry (C-c C-x i/o)</description></item><item><title>Roles</title><link>https://hermanhel.github.io/braindump/main/20211008132927-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211008132927-roles/</guid><description>I organize my life around roles: 4 Major Roles and other minor roles.(this would change over time) It&amp;rsquo;s fun that the Major and Minor roles have similar feature to Major and Minor modes in emacs.
Core Idendificaiton Scholar I&amp;rsquo;m a scholar.
By that I mean I&amp;rsquo;m a scholar who grow his intimacy with the notes, books, ideas and reallity. I get to know things, I became familiar, became friends with them.</description></item><item><title>rsync</title><link>https://hermanhel.github.io/braindump/main/20220428111155-rsync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220428111155-rsync/</guid><description>it&amp;rsquo;s basically a copy utility. executing rsync -avz src det will:
file - dest: copy the file to dest folder - dest: copy the folder to dest difference with cp is that it&amp;rsquo;s more efficient by checking the difference.
syncing file</description></item><item><title>Scheme machine</title><link>https://hermanhel.github.io/braindump/main/20211114220218-scheme_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211114220218-scheme_machine/</guid><description>Making Scheme Scheme are catagorized based on the target and period
Weekly Plan Weekly plans are schemes dedicated to the tasks of a week Target: Tasks in a week Goal:
Balence between different aspects Psycho peace to have time used. Weekly plan sessions occur once a week, typically on saturday.
Project plan machine Project plans are schemes dedicated to finish a project Target: a precise goal/game. Goal:
Archive some specific goal(like good EAP121 credit) Have time and task managed.</description></item><item><title>Self-Learning Machine</title><link>https://hermanhel.github.io/braindump/main/20211011015906-self_learning_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011015906-self_learning_machine/</guid><description>Self-Learning Machine This machine is for complete self-learning This machine stands alone and can be use for non-academic purpose.
Principles Ahead of time(prepare)
The self learning must be done at least 2 day before the Tutoring take place or any usage of the learned content, because the learning works 2 days after
Self awareness(feedback)
self-learning can easily fall into meaningless grinding without consciousness about what is being done.</description></item><item><title>Shell Command</title><link>https://hermanhel.github.io/braindump/main/20211010175413-shell_command/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211010175413-shell_command/</guid><description/></item><item><title>SPA003</title><link>https://hermanhel.github.io/braindump/main/20220224134707-spa003/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220224134707-spa003/</guid><description>Spanish.
PAS Threads THREAD Quizlet agenda Scheduling Recommandation
time
总共 9 个单元. 时间 3 天. 一天 3 个单元
TODOAula 1 Unidad 0 TODOAula 1 Unidad 1 TODOAula 1 Unidad 2 TODOAula 1 Unidad 3 TODOAula 1 Unidad 4 TODOAula 1 Unidad 5 TODOAula 1 Unidad 6 TODOAula 1 Unidad 7 TODOAula 1 Unidad 8 TODOAula 1 Unidad 9 THREAD The Grammar agenda The grammar contains merely sentences.</description></item><item><title>Spaced Repetition</title><link>https://hermanhel.github.io/braindump/main/20211011020259-spaced_repetition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011020259-spaced_repetition/</guid><description>Repetition of simple message(usually facts in bite size) in small time intervals and long periods. e.g: 4 times of a word list for 3 days
Flashcard Flashcard is a tool and form of spaced repetition. Sides of Flashcard record information that should be remembered and related together.
Anki Anki is an important spaced repetition, and actually the best choice. other methods would be requivelent or less convinient.
TODOFind a way to edit Anki conviniently like, with org-roam, or org, or markdown, or other in emacs</description></item><item><title>SQL</title><link>https://hermanhel.github.io/braindump/main/20211007014803-sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007014803-sql/</guid><description>Database Language for Relational Database
Use Emacs SQL Background SQL == Structured Query Language keywords ==&amp;gt; not case-sensitive names ==&amp;gt; case sensitive end with ;
2 Parts Data Definition Language Create tables &amp;amp; their constraints Changing columns/constraints Tuples Adding/Updating/Remoing Data Manipulation Language Hierarchy of database containment Computer Cluster 1 a database server Catalog 1 just database Schema 1 namespace of table. [tables, views, domains, assertions, collations, translation, character sets] same owner Schema 2 Catalog 2 Cluster 2 SQL DB and Related Softwares DBMS is an application.</description></item><item><title>states</title><link>https://hermanhel.github.io/braindump/main/20220202160057-states/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220202160057-states/</guid><description>atom, ref, var and agent</description></item><item><title>Statistics</title><link>https://hermanhel.github.io/braindump/main/20220329200423-statistics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220329200423-statistics/</guid><description>Exploratory Data Analysis The Materials Elements of structured data Rectangular Dataframe/spread sheet
in python, pandas offer DataFrame in R, data.frame is offered.
non rectangular data structures
Time series data Spatial data structures Graph data structures Estimates of Location where on the axises are the data? (central value?)
Mean Weighted mean Median Weighted median Trimmed mean Robust Outlier Estimates of Variability Data and Sampling Distributions Statistical Experiments and Significance Testing Regression and Prediction Classification Statistical Machine Learning Unsupervised Learning</description></item><item><title>Strategy Call</title><link>https://hermanhel.github.io/braindump/main/20211114233143-strategy_call/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211114233143-strategy_call/</guid><description>Strategy call refers to a certain motivation stimulated by the strategy might be put in use.
It might be a major source of fun in games. The application of a strategy could make people exciting, including players and hackers.</description></item><item><title>Study Methods</title><link>https://hermanhel.github.io/braindump/main/20211101141207-study_methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211101141207-study_methods/</guid><description>Fact Mnemonic Spaced Repetition Procedure Drill Concept Feynman Techinique</description></item><item><title>Task management machine</title><link>https://hermanhel.github.io/braindump/main/20211114223436-task_management_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211114223436-task_management_machine/</guid><description>Next Task All tasks are stored in the TODO task list.(with TODO heading prefix)
Among them, choose 5-6 to be focused in a few sessions, like a day or two. They are the NEXT tasks. Upon choosing, change their prefix to NEXT, and they will be displayed in the dashboard&amp;rsquo;s NEXT tasks area.
Add NEXT tasks 1. Emergency When some task needed to be dealt with immediately, add them to NEXT tasks.</description></item><item><title>Terraria Goingthrough</title><link>https://hermanhel.github.io/braindump/main/20210930095539-terraria/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20210930095539-terraria/</guid><description>后肉山计划 ref：TerraWiki困难模式指南
DONE1.准备阶段 DONE1.基于矿石：钯金，秘银，钛金，山铜 标题顺序为强度顺序
DONE2.魔法装备 以装备为目标
诅咒焰 弹射，高伤害，燃烧，连发,重力 黄金雨 去树妖那里买猩红种子，做猩红之地，在猩红之地刷灵液做 神灯烈焰 沙漠幽魂灯 沙漠幽魂 禁戒碎片 沙尘精 暗影之魂 裂天剑 在拜月教邪教徒前都很强 魔法导弹 光明碎块2 光明之魂15 魔力花 在丛林找大自然的恩赐 雨云魔杖 来自愤怒雨云 持续伤害 水晶蛇 在神圣之地钓鱼 直线攻击，分裂 彩虹魔杖 合成: 剧毒法杖 来自黑隐士 冰霜法杖 来自冰雪地带，冰雪人鱼和冰雪精 以敌怪为目标
宝箱怪 宝箱怪掉落很多钱和珍贵道具 在地狱有很多，在冰雪，地下腐化和神圣之地能找到特殊。 TODO3.近战装备 yoyo
amarok hel-fire TODO4.远程装备 箭</description></item><item><title>Ultra Project Machine</title><link>https://hermanhel.github.io/braindump/main/20211115173803-ultra_project_machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211115173803-ultra_project_machine/</guid><description>Ultralearning Principles 1. Metalearning 2. Focus 3. Direct 4. Drill 5. Retrieval 6. Feedback 7. Retention 8. Intuition Rules Rule 1: Don&amp;rsquo;t give up on Hard Problems Easily principleFeynman hand calculate forces, so as to understand them better.
could use a struggle timer, like 30 minutes
Pro Sometimes it just need a little more thinking Retrieving non-existing info, make remember easier Rule 2: Prove things to Understand Them principleUnderstanding is to re-create the results</description></item><item><title>Understanding</title><link>https://hermanhel.github.io/braindump/main/20211216142354-understanding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211216142354-understanding/</guid><description>法师抬起头，沉吟片刻，转头面向正在摆放实验具的学徒，“我们马上出发向北边。”
”我们为什么要去北边？“ 学徒在马车上问老师。
“有人理解了圣光。他刚刚在北边理解的。”
“您怎么知道呢？”
“理解就是创造。北边有圣光被创造出来了。”</description></item><item><title>Unix</title><link>https://hermanhel.github.io/braindump/main/20220316224823-unix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220316224823-unix/</guid><description>Use unix on [___] macOS got it.
Linux got it.
windows Cygwins.
Connecting to a Unix Server SSH You need:
Address/hostname - 224.235.43.6 username - hermanhe password - hermanheveryhandsome123 windows PuTTY, WinSCP
with unix in hand ssh username@hostname it&amp;rsquo;ll prompt for password
The COMMANDS!!! That is an order!!!!
pwd path rm remove rm -r recursive remove, to remove an entire du disk usage du -h in MB and GB wc word count, in line, word, chars cat type a file more cat per page.</description></item><item><title>vim</title><link>https://hermanhel.github.io/braindump/main/20211114120802-vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211114120802-vim/</guid><description>Modes Command mode enter from insert mode and command line mode with ESC
Insert mode enter from command mode with o,a,i,R
Meanings o,O: cusor at next line/up line i,I: cusor at point/first in line a,A: cursor at next point/last in line r,R: replace mode. r replace for once, R replace until hit ESC Command line mode enter from command mode with :,/,?
Commands Batch Add n argument in front of command</description></item><item><title>Watch</title><link>https://hermanhel.github.io/braindump/main/20211104165216-watch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211104165216-watch/</guid><description>Movies, TV series&amp;hellip;..
TV serie True detective [ ] music is good. serie seeme to be good. Could check</description></item><item><title>Weekly Plan</title><link>https://hermanhel.github.io/braindump/main/20211011025228-weekly_plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211011025228-weekly_plan/</guid><description>This machine is for Weekly Plan
Schedule The Weekly Plan Machine call scheduled on every Saturday night Change if needed
TODOWeekly Plan :LAST_REPEAT: [2022-03-18 Fri 16:46]Make Weekly Plan According to this machine
Flow of Weekly Plan Machine 1. Confirm on the Roles Recognize the roles and the priority and first things.
Repeated schedules Neuralscientist
Academic Machine
Preview Session Tutoring Session Homework Session 2.</description></item><item><title>wx mini program</title><link>https://hermanhel.github.io/braindump/main/20220404203957-wx_mini_program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20220404203957-wx_mini_program/</guid><description>wx mini program have a lot in common with html+js programming combination, but with some features.
Data and Storage Page Runtime memory function onLoad(option){ var that = this // Use variable that to refer to the page when &amp;#34;this&amp;#34; have other meaning. this.setData({ field : value, field2: value2 }) } qrcode util the QRcode util is provided with WeChat&amp;rsquo;s own Scan function. It&amp;rsquo;s pretty.
wx.scanCode({ //success function is that is called when the decoding succeeded.</description></item><item><title>XJTLU</title><link>https://hermanhel.github.io/braindump/main/20211007011107-xjtlu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007011107-xjtlu/</guid><description>I go to University at XJTLU in 2020. I&amp;rsquo;ll spend 2 year in XJTLU and 2 year in Liverpool University. Now is the beginning of the 2nd year of my time in XJTLU, Therefore I&amp;rsquo;ll host 2 subproject for academic success:
XJTLU-Y2S1 XJTLU-Y2S2(not created yet</description></item><item><title>XJTLU Rules</title><link>https://hermanhel.github.io/braindump/main/20211230222830-xjtlu_rules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211230222830-xjtlu_rules/</guid><description>入学手册 欢迎各位加入XXXXX大学。XXXXX大学致力于 打造国际化科研学习环境，培养具有国际视野和竞争力的世界公民。 本手册将为你提供一些享受大学生活，实现自我成长的建议。在无其他特定通知或条件下，建议严格遵守本手册内容。
作业 在XXXXX大学就读期间，你将被要求完成一些课程作业。
按时完成 理想状态下，请严格提前或按时提交作业。作业是衡量学习进度的重要标志。默认情况下，最多容忍5天的晚交情况。请务必在此之前提交作业，否则后果自负。
提交形式 除建筑系等一些特定学科，所有的课程作业都将在学校课程资源网站LLO（Learning Live Online）上完成。学校有且只有LLO一个作业提交网站。如未在LLO成功提交作业，视同未提交作业处理。
国际化氛围 肤色 你可能在学校里看到各种肤色和人种的老师和同学，这是完全正常的，本大学致力于打造国际化科研学习环境。在看到不熟悉外貌的老师或者同学时，请不要惊慌，或者采取喧哗、骚扰或者殴打等不当应对方式，应该像应对任何熟悉的人种，如非裔、亚裔或者欧裔师生一样应对。作为世界公民，对于多元化环境的适应是非常重要的。
身体器官
本条同样适用于拥有异常身体器官的师生。本学校的设施尽量考虑了多元人群的使用，但仍可能有出于各种原因，无法合适使用学校设施的师生。请在力所能及范围内对他们谅解或帮助。
例外
以上条款不适用于任何拥有XXXX和XXXXXXX的师生。如在任何时间发现具有以上特点的人员在校内逗留，请立刻通知学校物业进行处理，并尽量不被发现地离开现场，但请尽量不要离开学校。
政治 学校是新鲜思想的摇篮。你可以在校内除IB外的任何地点讨论任何合适的观点。校内的商店不被视作校内。如果认为观点将是不合适的，请不要在上述例外地点或校外进行讨论，否则后果自负。
（隐藏）限度
学校的观点保护有着限度
校园 校区 XXXXX大学有且仅有一个校区。学校南端地下室为人防措施，并不通向任何其他校区，地下室尽头墙壁的另一头也并非学校的地产。 请不要相信任何关于“南校区”或者任何不属于1.3.2所述教学楼的传言。也请不要传播他们，这只会给学校管理带来困扰。 如在任何场所看见描述 “南校区”或者暗示“南校区”存在的材料，请立即通知学校物业进行处理。
（隐藏）地下通道的墙和尽头的划痕、标语和声音 教学楼 学校现有且仅有一个基础教学楼Elementary Building，四个科学学科楼Science Building A/B/C/D，两个数学学科楼Mathematic Building A/B，一个公共教学楼Shared Building，以及两个电子学科教学楼Eelectronic Building A/B。
图书馆 学校现有且仅有一个图书馆，位于学校中心的中心楼Middle Building东侧3-10层。请不要相信或进入任何学校内除MB内图书馆以外的图书馆附属设施，图书馆并没有设置任何其他校内阅览室。
时间 通宵 请尽量避免在校通宵。学校的工作时段为8:00-17:00。 如特殊情况必须在校通宵，请使用特定的通宵教室。学校物业的保安会清理所有其他的教室，并驱赶所有逗留学生。他们是为了学生的安全着想，请一定听从他们的指示。 禁止在非通宵教室通宵。
意外情况
z一般来说，通宵教室是安全的。学校物业的保安会定期在通宵教室检查和巡视。 当有突发意外情况时，请相信学校保安，并听从他们的指示。他们经过训练，并了解学校情况。 即使你不认为发生了任何意外情况，也请相信学校保安，并听从他们的指示。 当你在非通宵教室通宵并遇见意外情况，通宵教室的保安不能也无法保证你的安全，请不要前往通宵教室寻求帮助。请在教室隐蔽处等待险情过去。如果你希望得到帮助，请尽力前往位于校园南端的地下室。</description></item><item><title>XJTLU-Y2S1</title><link>https://hermanhel.github.io/braindump/main/20211007011521-xjtlu_y2s1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hermanhel.github.io/braindump/main/20211007011521-xjtlu_y2s1/</guid><description>This is the overall plan and navigation of my academic life in Y2S1 in XJTLU. The Whole Y2S1 project is constructed in 2 aspects:
University Modules the modules I enrolled in CPT101 Computer System CPT103 Discrete Mathematics CPT107 Database System CPT111 Java Programming EAP121 Academic English Self Involved Academic Activities Other things I do with the University and/or fellow students with academic aims This could be easily messed up with my owned projects, the difference is: SIAC is with academic aim.</description></item></channel></rss>