<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Good Morning! on Herman&#39;s place</title>
    <link>https://hermanhel.github.io/braindump/</link>
    <description>Recent content in Good Morning! on Herman&#39;s place</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://hermanhel.github.io/braindump/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2022-05-02*</title>
      <link>https://hermanhel.github.io/braindump/daily/2022-05-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/daily/2022-05-02/</guid>
      <description>PROPERTIES: :ID: 4FBDA423-3258-4C4E-BBA1-408DCA2D036B
rewrite hermhel/org-find-headline-in-buffer-olp in cond fashion. the conditions are:
  not finding:
 if the buffer contains no heading then add 1 matching the first heading in path search again if not on a heading only when going in the buffer for the first time goto the next heading if the buffer have heading, but the top level have no headings of cur-finding add 1 heading at end, with cur-finding, search again if the level (not top level) have no heading of cur-finding insert a heading at end of level with cur-ding search again    finding:</description>
    </item>
    
    <item>
      <title>Binary-searching</title>
      <link>https://hermanhel.github.io/braindump/main/binary_searching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/main/binary_searching/</guid>
      <description>Binary searching is a searching algorithm for sorted data.
Input proposition  sorted list  Algorithm Algorithm B (Binary-search) With given sorted seq S, find POS of value ELT in S.
 B1. [Middle value] Find middle value MID of S, compare MID and ELT B2. [Change field] If MID &amp;gt; ELT, then change search region to the lesser side of MID of S B3. [recur] Repeat from B1, until S have length 1, where if MID \(\neq\) ELT, then there&amp;rsquo;s no ELT in S.</description>
    </item>
    
    <item>
      <title>Errors</title>
      <link>https://hermanhel.github.io/braindump/errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/errors/</guid>
      <description>Whoops! It seems like you&amp;rsquo;ve clicked a Broken Link&amp;hellip;&amp;hellip;very&amp;hellip;naughty&amp;hellip;?
Broken link They present in 3 conditions:
 a link to my local file on my local machines a link to a draft node that is either not created or published to this site or&amp;hellip;I made a mistake and typed it wrong. But what are the odds! like&amp;hellip;67%?  This Braindump is intended to be portable and concise. Yet I&amp;rsquo;m still facing a large amount of nonsence-rich notes, as illustrated by the few nodes on this braindump available.</description>
    </item>
    
    <item>
      <title>Inbox</title>
      <link>https://hermanhel.github.io/braindump/inbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/inbox/</guid>
      <description>蘇格拉底詰問程序 將蘇格拉底詰問法寫成formulated的算法,然後像doctor一樣實施,讓大家可以自己嘗試被詰問.</description>
    </item>
    
    <item>
      <title>Linear Algebra</title>
      <link>https://hermanhel.github.io/braindump/main/20220423190558-linear_algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/main/20220423190558-linear_algebra/</guid>
      <description>Linear Algebra is set of algebra formulated rules, formulated methods and found facts
Resource  This note is originally a reading note on math4ml. I&amp;rsquo;m adding my own insights afterwards.  Spaces Vector space set of vectors defining:
 add operation: v1 + v2 scale operation: n * v1  propositions  0: x + 0 = x -x: for each x, exist -x + x = 0 1: 1x = x commutativity: x+y=y+x Associativity: (x+y)+z=x+(y+z),(ab)x=a(bx) Distributivity: a(x + y) = ax + ay  linear combination  set of vectors: \(V=\{v_1,v_2&amp;hellip;\}\) set of real numbers: \(R = \{a_1,a_2&amp;hellip;\}\) linear combination: \(a_1v_1 + a_2v_2+&amp;hellip;+a_nv_n\)  linear independent only combination of \(a_1v_1+a_2v_2+a_3v_3+&amp;hellip;=0\) is \(a_1 = a_2 = &amp;hellip; = 0\)</description>
    </item>
    
    <item>
      <title>Machine</title>
      <link>https://hermanhel.github.io/braindump/main/20211104155334-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/main/20211104155334-machine/</guid>
      <description>Decription Machine typically should contain below information:
 Flow of action. In similar format as Algorithm Notation Other than actions, materials and places should be spcified here also, like in algorithms. Related Principles. Proof should be included in the principles&amp;rsquo; node. If the principle have no proof, note that [noProof] principle xxxx  Categories Purpose Project machines A machine could be constructed just for a particular project, with itself used for only once.</description>
    </item>
    
    <item>
      <title>Merge-sort</title>
      <link>https://hermanhel.github.io/braindump/main/merge_sort/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/main/merge_sort/</guid>
      <description>a Divide &amp;amp; conquer algorithm to sort a seq.
Algorithm 1. [devide] Represent the original seq by seq1 and seq2, where seq1 is seq[0..n/2], seq[n/2+1..n]
2. [conquer]  [trivial condition] for a seq with 1 item, it&amp;rsquo;s sorted self is it self  3. [combine] merge compare car of 2 ordered seq. if sorted desc.ly, append the largest one to the end of the result list.
Proof devide and conquer is trivial for merge-sort.</description>
    </item>
    
    <item>
      <title>meta-learning</title>
      <link>https://hermanhel.github.io/braindump/reference/meta-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/reference/meta-learning/</guid>
      <description>Do research about ways to learn a thing before learning it.
A principle and stage in learning that the writer Scott Young concluded.
narrative Want to learn drawing
After meta-learning should know:
 common pathaway of progressively learning drawing creditable resources/tutorials where to find practice materials; where is better/with what feature benchmark of learning; syllabus; multiple versions. well-known/creditable drills mentioned multiple times. atomic concepts/skills=procedures/facts to tackle  quote  make well-informed decision on how to put up a plan, considering resource available and current best approach/drills, while covering all necessary concept/skill/facts.</description>
    </item>
    
    <item>
      <title>Note-taking</title>
      <link>https://hermanhel.github.io/braindump/main/20220508095438-note_taking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/main/20220508095438-note_taking/</guid>
      <description>Note-taking is a skill and art of writing notes to record one&amp;rsquo;s thinking
Different flow could be seperately declared by:
 Material of reflex  reality(nature) article someone&amp;rsquo;s work tutorial/textbook   Time(context)  in leisure in work(about work) in class   objective  machine (to build a flow) principle (to test) facts plan (project machine)    Jethro&amp;rsquo;s Note taking I read Jethro&amp;rsquo;s How I take notes with Org-roam and was really inspired.</description>
    </item>
    
    <item>
      <title>Note-taking machine</title>
      <link>https://hermanhel.github.io/braindump/machine/note-taking-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/machine/note-taking-machine/</guid>
      <description>Note-taking machine listed ways I find ensuring principles/outcome and/or specifically tackle circumstances where note-taking could be not intuitive and/or when intuitive approach hides pitfalls.
Machine Redrafting 3-pass method Taking note while reading articles Taking notes from live lecture Taking notes from video Taking notes from static material (blog,textbook) Notes in direct practice Experiment Research note with emphasis on meta-learning
Literature review pitfalls Generally, all notes are good as long as they are relevent, concise, and make sence to me.</description>
    </item>
    
    <item>
      <title>Operating System</title>
      <link>https://hermanhel.github.io/braindump/main/20220328151029-operating_system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/main/20220328151029-operating_system/</guid>
      <description>The Info comes most from MITOCW
MIT 6.S081 meta 6.s081. a website. qemu, a hardware simulation under linux xv6, a teaching OS, on RISC-V processor
Overview What Operating system do  Abstract Hardware Multiplex Isolation Sharing Security access Preformance Range of application  orgnization Image Kernel have filesystem, process management, memory management&amp;hellip;codes.
 filesystem: give more high-level way to name files, orgnize directories,etc. process management: vi, cc are like different processes, and we want then to run concurrently, without interfering each other.</description>
    </item>
    
    <item>
      <title>Relational Database</title>
      <link>https://hermanhel.github.io/braindump/20220509210234-relational_database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/20220509210234-relational_database/</guid>
      <description>Relational Model Relation table with columns and rows records(Tuples) with common attributes
Attribute named column
         attribute 1 attrbute 2    Domain allowable values for Attribute e.g: Age ==&amp;gt; Positive Integer
Tuple a row of a relation
Degree the number of attributes of a Relation
Cardinality number of Tuples in a Relation
Relation schema Definition of a relation Contains:
 attributes  name domain    Relational database schema A set of relation schemas.</description>
    </item>
    
    <item>
      <title>Relational Database</title>
      <link>https://hermanhel.github.io/braindump/main/20211011143205-relational_database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/main/20211011143205-relational_database/</guid>
      <description>ca:PROPERTIES: :ID: 916112C1-589D-4FC2-B430-93EB989A1350
Relational Model Relation table with columns and rows records(Tuples) with common attributes
Attribute named column
         attribute 1 attrbute 2    Domain allowable values for Attribute e.g: Age ==&amp;gt; Positive Integer
Tuple a row of a relation
Degree the number of attributes of a Relation
Cardinality number of Tuples in a Relation
Relation schema Definition of a relation Contains:</description>
    </item>
    
    <item>
      <title>well-informed decision</title>
      <link>https://hermanhel.github.io/braindump/reference/well-informed-decision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hermanhel.github.io/braindump/reference/well-informed-decision/</guid>
      <description>Do research, and then make decision. Make sure the decision is backed with information of reality.
a prinicple from Ray Daleo</description>
    </item>
    
  </channel>
</rss>
